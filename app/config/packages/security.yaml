security:
    encoders:
        App\User\Domain\Entity\User:
            algorithm: auto
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\User\Domain\Entity\User
                property: email
    firewalls:
        login:
            pattern:  ^/api/v1/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/v1/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                username_path: email
        api_users:
            pattern:   ^/api/v1/users.*
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        api_jobs:
            pattern:   ^/api/v1/jobs/[\d+].*|/api/v1/jobs/create
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/jobs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/jobs/[\d+].*, roles: ROLE_ADMIN }
        - { path: ^/api/v1/users/[\d+].*, roles: ROLE_ADMIN }